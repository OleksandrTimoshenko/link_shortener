version: '3.8'
services:

  db:
    image: postgis/postgis:12-2.5-alpine
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - pastgres_backups:/var/backups/
    networks:
      - shortener_network

  django:
    image: ghcr.io/oleksandrtimoshenko/shortener_backend
    environment:
      - DB_HOST=db
    env_file:
      - .env
    command: ./entrypoint.sh
    volumes:
      - static_data:/backend_static/
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
    depends_on:
      - db
    networks:
      - shortener_network

  nginx:
    image: ghcr.io/oleksandrtimoshenko/shortener_nginx
    command: nginx -g "daemon off;"
    logging:
      driver: "json-file"
      options:
          max-size: "50m"
          max-file: "30"
    volumes:
      - static_data:/backend_static/
      - nginx-configs:/etc/nginx/conf.d/
      - httpasswd:/etc/nginx/secrets/
      - common-ssl:/etc/ssl/certs
      - letsencrypt:/etc/letsencrypt/
    ports:
      - 80:80
      - 443:443
    labels:
      nginx.proxy: "Certbot"
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
    networks:
      - shortener_network

  certbot:
    image: ghcr.io/oleksandrtimoshenko/dns-route53-certbot
    command: /entrypoint.sh
    env_file:
      - .env.certbot
    volumes:
      - common-ssl:/etc/ssl/certs
      - letsencrypt:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      restart_policy:
          condition: on-failure
    ports:
      - 445:443
    depends_on:
      - nginx

volumes:
   static_data:
   postgres_data:
   common-ssl:
   letsencrypt:
   nginx-configs:
      driver_opts:
        type: none
        device: /opt/nginx/conf
        o: bind
   httpasswd:
      driver_opts:
        type: none
        device: /opt/nginx/secrets
        o: bind
   pastgres_backups:
      driver_opts:
        type: none
        device: /var/backups/
        o: bind

networks:
    shortener_network:
        name: shortener_network