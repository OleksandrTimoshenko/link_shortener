version: '3.8'
services:

  db:
    image: postgis/postgis:12-2.5-alpine
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - pastgres_backups:/var/backups/
    networks:
      - shortener_network

  django:
    image: ghcr.io/oleksandrtimoshenko/shortener_backend
    environment:
      - DB_HOST=db
    env_file:
      - .env
    command: ./entrypoint.sh
    volumes:
      - static_data:/backend_static/
    healthcheck:
      test: curl -s 127.0.0.1:8000/health || echo 1
    deploy:
      mode: replicated
      replicas: 2
      update_config:
        order: start-first
        failure_action: rollback
        delay: 5s
    networks:
      - shortener_network

  nginx:
    image: ghcr.io/oleksandrtimoshenko/shortener_nginx
    command: nginx -g "daemon off;"
    logging:
      driver: "json-file"
      options:
          max-size: "50m"
          max-file: "30"
    volumes:
      - static_data:/backend_static/
      - nginx-configs:/etc/nginx/conf.d/
      - httpasswd:/etc/nginx/secrets/
    ports:
      - 80:80
    healthcheck:
      test: nginx -t 2>/dev/null; echo $$?
    deploy:
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - shortener_network

volumes:
   static_data:
   postgres_data:
   nginx-configs:
      driver_opts:
        type: none
        device: /opt/nginx/conf
        o: bind
   httpasswd:
      driver_opts:
        type: none
        device: /opt/nginx/secrets
        o: bind
   pastgres_backups:
      driver_opts:
        type: none
        device: /var/backups/
        o: bind

networks:
    shortener_network:
        name: shortener_network